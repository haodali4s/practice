{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//引入二维码插件\nimport QRCode from \"qrcode\";\nimport { reqPayInfo, reqPayResult } from \"@/api/index.js\";\nexport default {\n  name: \"Pay\",\n  data() {\n    return {\n      //支付相关信息:支付钱数、订单号、二维码地址\n      payInfo: {},\n      code: \"\",\n      timer: null\n    };\n  },\n  //组件挂载完毕，获取支付相关信息\n  mounted() {\n    //获取支付信息\n    this.getPayInfo();\n  },\n  methods: {\n    //立即支付按钮\n    async open() {\n      //生成一个二维码URL\n      let url = await QRCode.toDataURL(this.payInfo.codeUrl);\n      //第一个参数:即为内容区域\n      //第二个参数:标题\n      //第三个参数:组件的配置项\n      this.$alert(`<img src=${url}>`, \"请你微信扫码支付\", {\n        dangerouslyUseHTMLString: true,\n        //将字符串转换为标签\n        center: true,\n        //居中\n        showClose: false,\n        //右上角的关闭按钮不显示\n        confirmButtonText: \"支付成功\",\n        //确定按钮的文本\n        showCancelButton: true,\n        //显示取消按钮\n        cancelButtonText: \"支付遇见问题\",\n        //取消按钮的文本\n        closeOnClickModal: true,\n        //点击遮罩层关闭messagebox\n        beforeClose: (action, instance, done) => {\n          //在消息盒子关闭之前会触发\n          //action参数:可以区分用户点击的是取消【cancel】、确定【confirm】\n          //instance参数:当前消息框组件VC\n          //done参数：是一个函数,函数可以关闭消息盒子\n          if (action == \"confirm\" && this.code == 200) {\n            //清除定时器\n            clearInterval(this.timer);\n            //关闭盒子\n            done();\n            //路由跳转\n            this.$router.push(\"/success\");\n          } else if (action == \"cancel\" && this.code != 200) {\n            //清除定时器\n            clearInterval(this.timer);\n            //关闭盒子\n            done();\n            this.$message.error(\"支付遇见问题请联系超管豪哥\");\n          }\n        }\n      });\n      //查询支付结果,开启定时器每隔一段时间询问支付结果\n      this.timer = setInterval(async () => {\n        //发请求获取支付结果\n        let result = await reqPayResult(this.payInfo.orderId);\n        //返回数据当中：code=200代表支付成功  code=205未支付\n        if (result.code == 200) {\n          //支付成功了\n          //存储一下支付成功的code数值，通过他判断支付是否成功\n          this.code = result.code;\n          //清除定时器\n          clearInterval(this.timer);\n          //关闭messagebox\n          this.$msgbox.close();\n          //在路由跳转\n          this.$router.push(\"/paySuccess\");\n        } else {\n          //未支付\n          this.code = result.code;\n        }\n      }, 1000);\n    },\n    //获取支付信息\n    async getPayInfo() {\n      let result = await reqPayInfo(this.$route.query.orderId);\n      if (result.code == 200) {\n        this.payInfo = result.data;\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}