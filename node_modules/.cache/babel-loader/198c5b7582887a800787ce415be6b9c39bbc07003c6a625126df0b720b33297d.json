{"ast":null,"code":"import { Swiper, Navigation, Pagination, Autoplay } from \"swiper\";\nexport default {\n  props: ['list'],\n  watch: {\n    //floor是父组件给与的props:它的props属性值从来没有变化过！！！！\n    list: {\n      immediate: true,\n      handler() {\n        this.$nextTick(() => {\n          //初始化Swiper类的实例\n          var mySwiper = new Swiper(this.$refs.myswiper, {\n            //设置轮播图防线\n            direction: \"horizontal\",\n            //开启循环模式\n            loop: true,\n            // 如果需要分页器\n            pagination: {\n              el: \".swiper-pagination\",\n              //分页器类型\n              type: \"bullets\",\n              //点击分页器，切换轮播\n              clickable: true\n            },\n            //自动轮播\n            autoplay: {\n              delay: 1000,\n              //新版本的写法：目前是5版本\n              // pauseOnMouseEnter: true,\n              //如果设置为true，当切换到最后一个slide时停止自动切换\n              stopOnLastSlide: true,\n              //用户操作swiper之后，是否禁止autoplay\n              disableOnInteraction: false\n            },\n            // 如果需要前进后退按钮\n            navigation: {\n              nextEl: \".swiper-button-next\",\n              prevEl: \".swiper-button-prev\"\n            }\n            //切换效果\n            // effect: \"cube\",\n          });\n\n          //1:swiper插件,对外暴露一个Swiper构造函数\n          //2:Swiper构造函数需要传递参数 1、结构总根节点CSS选择器|根节点真实DOM节点  2、轮播图配置项\n          //鼠标进入停止轮播\n          mySwiper.el.onmouseover = function () {\n            mySwiper.autoplay.stop();\n          };\n          //鼠标离开开始轮播\n          mySwiper.el.onmouseout = function () {\n            mySwiper.autoplay.start();\n          };\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["Swiper","Navigation","Pagination","Autoplay","props","watch","list","immediate","handler","$nextTick","mySwiper","$refs","myswiper","direction","loop","pagination","el","type","clickable","autoplay","delay","stopOnLastSlide","disableOnInteraction","navigation","nextEl","prevEl","onmouseover","stop","onmouseout","start"],"sources":["src/components/carousel/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"swiper\" ref=\"myswiper\">\r\n                <div class=\"swiper-wrapper\">\r\n                  <div\r\n                    class=\"swiper-slide\"\r\n                    v-for=\"(item, index) in list\"\r\n                    :key=\"item.id\"\r\n                    \r\n                  >\r\n                    <img :src=\"item.imgUrl\" />\r\n                  </div>\r\n                </div>\r\n                <!-- 如果需要分页器 -->\r\n                <div class=\"swiper-pagination\"></div>\r\n\r\n                <!-- 如果需要导航按钮 -->\r\n                <div class=\"swiper-button-prev\"></div>\r\n                <div class=\"swiper-button-next\"></div>\r\n              </div>\r\n</template>\r\n\r\n<script>\r\nimport { Swiper, Navigation, Pagination, Autoplay } from \"swiper\";\r\nexport default {\r\n    props:['list'],\r\n    watch: {\r\n    //floor是父组件给与的props:它的props属性值从来没有变化过！！！！\r\n    list: {\r\n      immediate: true,\r\n      handler() {\r\n        this.$nextTick(() => {\r\n          //初始化Swiper类的实例\r\n          var mySwiper = new Swiper(\r\n           this.$refs.myswiper,\r\n            {\r\n              //设置轮播图防线\r\n              direction: \"horizontal\",\r\n              //开启循环模式\r\n              loop: true,\r\n              // 如果需要分页器\r\n              pagination: {\r\n                el: \".swiper-pagination\",\r\n                //分页器类型\r\n                type: \"bullets\",\r\n                //点击分页器，切换轮播\r\n                clickable: true,\r\n              },\r\n              //自动轮播\r\n              autoplay: {\r\n                delay: 1000,\r\n                //新版本的写法：目前是5版本\r\n                // pauseOnMouseEnter: true,\r\n                //如果设置为true，当切换到最后一个slide时停止自动切换\r\n                stopOnLastSlide: true,\r\n                //用户操作swiper之后，是否禁止autoplay\r\n                disableOnInteraction: false,\r\n              },\r\n              // 如果需要前进后退按钮\r\n              navigation: {\r\n                nextEl: \".swiper-button-next\",\r\n                prevEl: \".swiper-button-prev\",\r\n              },\r\n              //切换效果\r\n              // effect: \"cube\",\r\n            }\r\n          );\r\n\r\n          //1:swiper插件,对外暴露一个Swiper构造函数\r\n          //2:Swiper构造函数需要传递参数 1、结构总根节点CSS选择器|根节点真实DOM节点  2、轮播图配置项\r\n          //鼠标进入停止轮播\r\n          mySwiper.el.onmouseover = function () {\r\n            mySwiper.autoplay.stop();\r\n          };\r\n          //鼠标离开开始轮播\r\n          mySwiper.el.onmouseout = function () {\r\n            mySwiper.autoplay.start();\r\n          };\r\n        });\r\n      },\r\n    },\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAsBA,SAAAA,MAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,QAAA;AACA;EACAC,KAAA;EACAC,KAAA;IACA;IACAC,IAAA;MACAC,SAAA;MACAC,QAAA;QACA,KAAAC,SAAA;UACA;UACA,IAAAC,QAAA,OAAAV,MAAA,CACA,KAAAW,KAAA,CAAAC,QAAA,EACA;YACA;YACAC,SAAA;YACA;YACAC,IAAA;YACA;YACAC,UAAA;cACAC,EAAA;cACA;cACAC,IAAA;cACA;cACAC,SAAA;YACA;YACA;YACAC,QAAA;cACAC,KAAA;cACA;cACA;cACA;cACAC,eAAA;cACA;cACAC,oBAAA;YACA;YACA;YACAC,UAAA;cACAC,MAAA;cACAC,MAAA;YACA;YACA;YACA;UACA,EACA;;UAEA;UACA;UACA;UACAf,QAAA,CAAAM,EAAA,CAAAU,WAAA;YACAhB,QAAA,CAAAS,QAAA,CAAAQ,IAAA;UACA;UACA;UACAjB,QAAA,CAAAM,EAAA,CAAAY,UAAA;YACAlB,QAAA,CAAAS,QAAA,CAAAU,KAAA;UACA;QACA;MACA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}