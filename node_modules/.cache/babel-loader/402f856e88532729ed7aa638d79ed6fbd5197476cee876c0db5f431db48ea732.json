{"ast":null,"code":"export default {\n  name: \"Zoom\",\n  props: [\"list\"],\n  watch: {\n    list: {}\n  },\n  data() {\n    return {\n      index: 0\n    };\n  },\n  mounted() {\n    //接受兄弟组件传递过来的索引值\n    this.$bus.$on(\"sendIndex\", index => {\n      this.index = index;\n    });\n  },\n  computed: {\n    bigObj() {\n      return this.list[this.index] || {};\n    }\n  }\n  // methods: {\n\n  //   handler(e) {\n  //     //获取蒙板\n  //     let mask = this.$refs.mask;\n  //     let big = this.$refs.big;\n  //     //计算蒙板的left|top数值\n  //     let l = e.offsetX - mask.offsetWidth / 2;\n  //     let t = e.offsetY - mask.offsetHeight / 2;\n  //     //约束蒙板的上下左右范围\n  //     if (l < 0) l = 0;\n  //     if (l > mask.offsetWidth) l = mask.offsetWidth;\n  //     if (t < 0) t = 0;\n  //     if (t > mask.offsetHeight) t = mask.offsetHeight;\n  //     mask.style.left = l + \"px\";\n  //     mask.style.top = t + \"px\";\n  //     big.style.left = -2 * l + \"px\";\n  //     big.style.top = -2 * t + \"px\";\n  //   },\n  // },\n};","map":{"version":3,"names":["name","props","watch","list","data","index","mounted","$bus","$on","computed","bigObj"],"sources":["src/pages/detail/Zoom/Zoom.vue"],"sourcesContent":["<template>\r\n<div class=\"spec-preview\">\r\n    <h3>{{ list.id }}</h3>\r\n    <!-- <img :src=\"bigObj.imgUrl\" /> -->\r\n    <!-- 绑定鼠标移动事件 -->\r\n    <div class=\"event\" @mousemove=\"handler\"></div>\r\n    <div class=\"big\">\r\n      <img :src=\"bigObj.imgUrl\" ref=\"big\" />\r\n    </div>\r\n    <div class=\"mask\" ref=\"mask\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Zoom\",\r\n  props: [\"list\"],\r\n  watch:{\r\n    list:{}\r\n  },\r\n  data() {\r\n    return {\r\n      index: 0\r\n    };\r\n  },\r\n  mounted() {\r\n    //接受兄弟组件传递过来的索引值\r\n    this.$bus.$on(\"sendIndex\", index => {\r\n      this.index = index;\r\n    });\r\n  },\r\n  computed: {\r\n    bigObj() {\r\n      return this.list[this.index] || {};\r\n    }\r\n  }\r\n  // methods: {\r\n\r\n  //   handler(e) {\r\n  //     //获取蒙板\r\n  //     let mask = this.$refs.mask;\r\n  //     let big = this.$refs.big;\r\n  //     //计算蒙板的left|top数值\r\n  //     let l = e.offsetX - mask.offsetWidth / 2;\r\n  //     let t = e.offsetY - mask.offsetHeight / 2;\r\n  //     //约束蒙板的上下左右范围\r\n  //     if (l < 0) l = 0;\r\n  //     if (l > mask.offsetWidth) l = mask.offsetWidth;\r\n  //     if (t < 0) t = 0;\r\n  //     if (t > mask.offsetHeight) t = mask.offsetHeight;\r\n  //     mask.style.left = l + \"px\";\r\n  //     mask.style.top = t + \"px\";\r\n  //     big.style.left = -2 * l + \"px\";\r\n  //     big.style.top = -2 * t + \"px\";\r\n  //   },\r\n  // },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.spec-preview {\r\n  position: relative;\r\n  width: 400px;\r\n  height: 400px;\r\n  border: 1px solid #ccc;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .event {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 998;\r\n  }\r\n\r\n  .mask {\r\n    width: 50%;\r\n    height: 50%;\r\n    background-color: rgba(0, 255, 0, 0.3);\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    display: none;\r\n  }\r\n\r\n  .big {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: -1px;\r\n    left: 100%;\r\n    border: 1px solid #aaa;\r\n    overflow: hidden;\r\n    z-index: 998;\r\n    display: none;\r\n    background: white;\r\n\r\n    img {\r\n      width: 200%;\r\n      max-width: 200%;\r\n      height: 200%;\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n    }\r\n  }\r\n\r\n  .event:hover ~ .mask,\r\n  .event:hover ~ .big {\r\n    display: block;\r\n  }\r\n}\r\n</style>"],"mappings":"AAcA;EACAA,IAAA;EACAC,KAAA;EACAC,KAAA;IACAC,IAAA;EACA;EACAC,KAAA;IACA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAAC,IAAA,CAAAC,GAAA,cAAAH,KAAA;MACA,KAAAA,KAAA,GAAAA,KAAA;IACA;EACA;EACAI,QAAA;IACAC,OAAA;MACA,YAAAP,IAAA,MAAAE,KAAA;IACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}