{"ast":null,"code":"import { mapGetters } from \"vuex\";\n//按需引入lodash节流函数\nimport throttle from \"lodash/throttle\";\n//按需引入lodash防抖函数\nimport debounce from \"lodash/debounce\";\nexport default {\n  name: \"ShopCart\",\n  //组件挂载完毕,获取购物车的数据\n  mounted() {\n    //获取购物车的数据\n    this.getData();\n  },\n  computed: {\n    ...mapGetters([\"CartInfo\"]),\n    //购物车的数据\n    cartInfoList() {\n      return this.CartInfo.cartInfoList || [];\n    },\n    //购物车商品总价\n    totalPrice() {\n      return this.cartInfoList.reduce((a, b) => a + b.skuPrice * b.skuNum, 0);\n    },\n    isCartChecked() {\n      //购物车里面的数据进行过滤(勾选)，如果勾选的商品与购物车商品总数相等。全选勾选！相反不够！！！\n      return this.cartInfoList.every(item => item == 1);\n    }\n  },\n  methods: {\n    //获取购物车的数据请求函数\n    getData() {\n      this.$store.dispatch(\"getShopCart\");\n    },\n    //修改商品数据->加的操作\n    async addSkuNum(cart) {\n      //整理参数\n      let params = {\n        skuId: cart.skuId,\n        skuNum: 1\n      };\n      //发请求:通知服务器修改当前商品的个数\n      //再次获取购物车的最新的数据：保证这次修改数据完毕【成功以后在获取购物车数据】\n      try {\n        //修改商品个数成功\n        await this.$store.dispatch(\"addOrUpdateCart\", params);\n        //再次获取最新的购物车的数据\n        this.getData();\n      } catch (error) {\n        alert(\"修改数量失败\");\n      }\n    },\n    //修改商品数据-减的操作\n    minusSkuNum: throttle(async function (cart) {\n      if (cart.skuNum > 1) {\n        //整理参数:至少加入购物车的数量最低1个\n        let params = {\n          skuId: cart.skuId,\n          skuNum: -1\n        };\n        //修改商品的数据\n        try {\n          //修改商品的个数、成功以后再次获取购物车的数据\n          await this.$store.dispatch(\"addOrUpdateCart\", params);\n          this.getData();\n        } catch (error) {}\n      }\n    }, 2000),\n    changeSkuNum: debounce(async function (cart, e) {\n      //整理参数\n      let params = {\n        skuId: cart.skuId\n      };\n      //计算出SkuNum携带的数据\n      let userResultValue = e.target.value * 1;\n      //用户输入完毕，最终结果【非法条件】\n      if (isNaN(userResultValue) || userResultValue < 1) {\n        params.skuNum = 0;\n      } else {\n        //正常情况\n        params.skuNum = parseInt(userResultValue) - cart.skuNum;\n      }\n      //发请求：修改商品的个数\n      try {\n        //修改商品的个数、成功以后再次获取购物车的数据\n        await this.$store.dispatch(\"addOrUpdateCart\", params);\n        this.getData();\n      } catch (error) {}\n    }, 500),\n    //删除某一个商品\n    async deleteCartById(cart) {\n      //整理参数\n      let skuId = cart.skuId;\n      try {\n        //删除商品成功\n        await this.$store.dispatch(\"deleteCartById\", skuId);\n        //再次获取购物车最新的数据\n        this.getData();\n      } catch (error) {\n        alert(\"删除失败\");\n      }\n    },\n    //修改某一个商品的勾选的状态\n    async changeChecked(cart, e) {\n      //整理参数\n      let params = {\n        skuId: cart.skuId,\n        isChecked: e.target.checked ? \"1\" : \"0\"\n      };\n      //发请求:修改商品的勾选的状态\n      try {\n        await this.$store.dispatch(\"changeChecked\", params);\n        this.getData();\n      } catch (error) {}\n    },\n    //全选的业务\n    async updateAllChecked(e) {\n      //获取全选的复选框勾选的状态,接口需要的1|0\n      let isChecked = e.target.checked ? \"1\" : \"0\";\n      try {\n        //await等待成功:购物车全部商品勾选状态成功以后\n        await this.$store.dispatch(\"allUpdateChecked\", isChecked);\n        this.getData();\n      } catch (error) {\n        alert(\"修改失败\");\n      }\n    },\n    //删除选中的商品\n    async deleteAllCart() {\n      try {\n        //等待全部勾选商品删除以后\n        await this.$store.dispatch(\"deleteAllCart\");\n        //再次获取购物车的数据\n        this.getData();\n      } catch (error) {\n        alert(\"删除失败\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","throttle","debounce","name","mounted","getData","computed","cartInfoList","CartInfo","totalPrice","reduce","a","b","skuPrice","skuNum","isCartChecked","every","item","methods","$store","dispatch","addSkuNum","cart","params","skuId","error","alert","minusSkuNum","changeSkuNum","e","userResultValue","target","value","isNaN","parseInt","deleteCartById","changeChecked","isChecked","checked","updateAllChecked","deleteAllCart"],"sources":["src/pages/shopcart/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart\">\r\n    <h4>全部商品</h4>\r\n    <div class=\"cart-main\">\r\n      <div class=\"cart-th\">\r\n        <div class=\"cart-th1\">全部</div>\r\n        <div class=\"cart-th2\">商品</div>\r\n        <div class=\"cart-th3\">单价（元）</div>\r\n        <div class=\"cart-th4\">数量</div>\r\n        <div class=\"cart-th5\">小计（元）</div>\r\n        <div class=\"cart-th6\">操作</div>\r\n      </div>\r\n      <div class=\"cart-body\">\r\n        <ul class=\"cart-list\" v-for=\"(cart, index) in cartInfoList\" :key=\"cart.id\">\r\n          <li class=\"cart-list-con1\">\r\n            <input type=\"checkbox\" name=\"chk_list\" :checked=\"cart.isChecked\" @change=\"changeChecked(cart, $event)\" />\r\n          </li>\r\n          <li class=\"cart-list-con2\">\r\n            <img :src=\"cart.imgUrl\" />\r\n            <div class=\"item-msg\">{{ cart.skuName }}</div>\r\n          </li>\r\n          <li class=\"cart-list-con4\">\r\n            <span class=\"price\">{{ cart.skuPrice }}.00</span>\r\n          </li>\r\n          <li class=\"cart-list-con5\">\r\n            <a class=\"mins\" @click=\"minusSkuNum(cart)\">-</a>\r\n            <input autocomplete=\"off\" type=\"text\" :value=\"cart.skuNum\" minnum=\"1\" class=\"itxt\" @input=\"changeSkuNum(cart, $event)\" />\r\n            <a @click=\"addSkuNum(cart)\" class=\"plus\">+</a>\r\n          </li>\r\n          <li class=\"cart-list-con6\">\r\n            <span class=\"sum\">{{ cart.skuNum * cart.skuPrice }}</span>\r\n          </li>\r\n          <li class=\"cart-list-con7\">\r\n            <a class=\"sindelet\" @click=\"deleteCartById(cart)\">删除</a>\r\n            <br />\r\n            <a href=\"#none\">移到收藏</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"cart-tool\">\r\n      <div class=\"select-all\">\r\n        <input class=\"chooseAll\" type=\"checkbox\" @change=\"updateAllChecked($event)\" :checked=\"isCartChecked && cartInfoList.length>0\" />\r\n        <span>全选</span>\r\n      </div>\r\n      <div class=\"option\">\r\n        <a @click=\"deleteAllCart\">删除选中的商品</a>\r\n        <a href=\"#none\">移到我的关注</a>\r\n        <a href=\"#none\">清除下柜商品</a>\r\n      </div>\r\n      <div class=\"money-box\">\r\n        <div class=\"chosed\">\r\n          已选择\r\n          <span>{{ cartInfoList.length }}</span>件商品\r\n        </div>\r\n        <div class=\"sumprice\">\r\n          <em>总价（不含运费） ：</em>\r\n          <i class=\"summoney\">{{ totalPrice }}</i>\r\n        </div>\r\n        <div class=\"sumbtn\">\r\n          <!-- 路由跳转:没有任何业务逻辑,声明式、编程式导航都可以 -->\r\n          <router-link class=\"sum-btn\" to=\"/trade\">结算</router-link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\n//按需引入lodash节流函数\r\nimport throttle from \"lodash/throttle\";\r\n//按需引入lodash防抖函数\r\nimport debounce from \"lodash/debounce\";\r\nexport default {\r\n  name: \"ShopCart\",\r\n  //组件挂载完毕,获取购物车的数据\r\n  mounted() {\r\n    //获取购物车的数据\r\n    this.getData();\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"CartInfo\"]),\r\n    //购物车的数据\r\n    cartInfoList() {\r\n      return this.CartInfo.cartInfoList || [];\r\n    },\r\n    //购物车商品总价\r\n    totalPrice() {\r\n      return this.cartInfoList.reduce((a, b) => a + b.skuPrice * b.skuNum, 0);\r\n    },\r\n    isCartChecked() {\r\n      //购物车里面的数据进行过滤(勾选)，如果勾选的商品与购物车商品总数相等。全选勾选！相反不够！！！\r\n      return (\r\n        this.cartInfoList.every(item=>item==1)\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    //获取购物车的数据请求函数\r\n    getData() {\r\n      this.$store.dispatch(\"getShopCart\");\r\n    },\r\n    //修改商品数据->加的操作\r\n    async addSkuNum(cart) {\r\n      //整理参数\r\n      let params = { skuId: cart.skuId, skuNum: 1 };\r\n      //发请求:通知服务器修改当前商品的个数\r\n      //再次获取购物车的最新的数据：保证这次修改数据完毕【成功以后在获取购物车数据】\r\n      try {\r\n        //修改商品个数成功\r\n        await this.$store.dispatch(\"addOrUpdateCart\", params);\r\n        //再次获取最新的购物车的数据\r\n        this.getData();\r\n      } catch (error) {\r\n        alert(\"修改数量失败\");\r\n      }\r\n    },\r\n    //修改商品数据-减的操作\r\n    minusSkuNum: throttle(async function(cart) {\r\n      if (cart.skuNum > 1) {\r\n        //整理参数:至少加入购物车的数量最低1个\r\n        let params = { skuId: cart.skuId, skuNum: -1 };\r\n        //修改商品的数据\r\n        try {\r\n          //修改商品的个数、成功以后再次获取购物车的数据\r\n          await this.$store.dispatch(\"addOrUpdateCart\", params);\r\n          this.getData();\r\n        } catch (error) {}\r\n      }\r\n    }, 2000),\r\n    changeSkuNum: debounce(async function(cart, e) {\r\n      //整理参数\r\n      let params = { skuId: cart.skuId };\r\n      //计算出SkuNum携带的数据\r\n      let userResultValue = e.target.value * 1;\r\n      //用户输入完毕，最终结果【非法条件】\r\n      if (isNaN(userResultValue) || userResultValue < 1) {\r\n        params.skuNum = 0;\r\n      } else {\r\n        //正常情况\r\n        params.skuNum = parseInt(userResultValue) - cart.skuNum;\r\n      }\r\n      //发请求：修改商品的个数\r\n      try {\r\n        //修改商品的个数、成功以后再次获取购物车的数据\r\n        await this.$store.dispatch(\"addOrUpdateCart\", params);\r\n        this.getData();\r\n      } catch (error) {}\r\n    }, 500),\r\n    //删除某一个商品\r\n    async deleteCartById(cart) {\r\n      //整理参数\r\n      let skuId = cart.skuId;\r\n      try {\r\n        //删除商品成功\r\n        await this.$store.dispatch(\"deleteCartById\", skuId);\r\n        //再次获取购物车最新的数据\r\n        this.getData();\r\n      } catch (error) {\r\n        alert(\"删除失败\");\r\n      }\r\n    },\r\n    //修改某一个商品的勾选的状态\r\n    async changeChecked(cart, e) {\r\n      //整理参数\r\n      let params = {\r\n        skuId: cart.skuId,\r\n        isChecked: e.target.checked ? \"1\" : \"0\"\r\n      };\r\n      //发请求:修改商品的勾选的状态\r\n      try {\r\n        await this.$store.dispatch(\"changeChecked\", params);\r\n        this.getData();\r\n      } catch (error) {}\r\n    },\r\n    //全选的业务\r\n    async updateAllChecked(e) {\r\n      //获取全选的复选框勾选的状态,接口需要的1|0\r\n      let isChecked = e.target.checked ? \"1\" : \"0\";\r\n      try {\r\n        //await等待成功:购物车全部商品勾选状态成功以后\r\n        await this.$store.dispatch(\"allUpdateChecked\", isChecked);\r\n        this.getData();\r\n      } catch (error) {\r\n        alert(\"修改失败\");\r\n      }\r\n    },\r\n    //删除选中的商品\r\n    async deleteAllCart() {\r\n      try {\r\n        //等待全部勾选商品删除以后\r\n        await this.$store.dispatch(\"deleteAllCart\");\r\n        //再次获取购物车的数据\r\n        this.getData();\r\n      } catch (error) {\r\n        alert(\"删除失败\");\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.cart {\r\n  width: 1200px;\r\n  margin: 0 auto;\r\n\r\n  h4 {\r\n    margin: 9px 0;\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n  }\r\n\r\n  .cart-main {\r\n    .cart-th {\r\n      background: #f5f5f5;\r\n      border: 1px solid #ddd;\r\n      padding: 10px;\r\n      overflow: hidden;\r\n\r\n      & > div {\r\n        float: left;\r\n      }\r\n\r\n      .cart-th1 {\r\n        width: 25%;\r\n\r\n        input {\r\n          vertical-align: middle;\r\n        }\r\n\r\n        span {\r\n          vertical-align: middle;\r\n        }\r\n      }\r\n\r\n      .cart-th2 {\r\n        width: 25%;\r\n      }\r\n\r\n      .cart-th3,\r\n      .cart-th4,\r\n      .cart-th5,\r\n      .cart-th6 {\r\n        width: 12.5%;\r\n      }\r\n    }\r\n\r\n    .cart-body {\r\n      margin: 15px 0;\r\n      border: 1px solid #ddd;\r\n\r\n      .cart-list {\r\n        padding: 10px;\r\n        border-bottom: 1px solid #ddd;\r\n        overflow: hidden;\r\n\r\n        & > li {\r\n          float: left;\r\n        }\r\n\r\n        .cart-list-con1 {\r\n          width: 15%;\r\n        }\r\n\r\n        .cart-list-con2 {\r\n          width: 35%;\r\n\r\n          img {\r\n            width: 82px;\r\n            height: 82px;\r\n            float: left;\r\n          }\r\n\r\n          .item-msg {\r\n            float: left;\r\n            width: 150px;\r\n            margin: 0 10px;\r\n            line-height: 18px;\r\n          }\r\n        }\r\n\r\n        .cart-list-con3 {\r\n          width: 20.8333%;\r\n\r\n          .item-txt {\r\n            text-align: center;\r\n          }\r\n        }\r\n\r\n        .cart-list-con4 {\r\n          width: 10%;\r\n        }\r\n\r\n        .cart-list-con5 {\r\n          width: 15%;\r\n\r\n          .mins {\r\n            border: 1px solid #ddd;\r\n            border-right: 0;\r\n            float: left;\r\n            color: #666;\r\n            width: 6px;\r\n            text-align: center;\r\n            padding: 8px;\r\n          }\r\n\r\n          input {\r\n            border: 1px solid #ddd;\r\n            width: 40px;\r\n            height: 33px;\r\n            float: left;\r\n            text-align: center;\r\n            font-size: 14px;\r\n          }\r\n\r\n          .plus {\r\n            border: 1px solid #ddd;\r\n            border-left: 0;\r\n            float: left;\r\n            color: #666;\r\n            width: 6px;\r\n            text-align: center;\r\n            padding: 8px;\r\n          }\r\n        }\r\n\r\n        .cart-list-con6 {\r\n          width: 12.5%;\r\n\r\n          .sum {\r\n            font-size: 16px;\r\n          }\r\n        }\r\n\r\n        .cart-list-con7 {\r\n          width: 12.5%;\r\n\r\n          a {\r\n            color: #666;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .cart-tool {\r\n    overflow: hidden;\r\n    border: 1px solid #ddd;\r\n\r\n    .select-all {\r\n      padding: 10px;\r\n      overflow: hidden;\r\n      float: left;\r\n\r\n      span {\r\n        vertical-align: middle;\r\n      }\r\n\r\n      input {\r\n        vertical-align: middle;\r\n      }\r\n    }\r\n\r\n    .option {\r\n      padding: 10px;\r\n      overflow: hidden;\r\n      float: left;\r\n\r\n      a {\r\n        float: left;\r\n        padding: 0 10px;\r\n        color: #666;\r\n      }\r\n    }\r\n\r\n    .money-box {\r\n      float: right;\r\n\r\n      .chosed {\r\n        line-height: 26px;\r\n        float: left;\r\n        padding: 0 10px;\r\n      }\r\n\r\n      .sumprice {\r\n        width: 200px;\r\n        line-height: 22px;\r\n        float: left;\r\n        padding: 0 10px;\r\n\r\n        .summoney {\r\n          color: #c81623;\r\n          font-size: 16px;\r\n        }\r\n      }\r\n\r\n      .sumbtn {\r\n        float: right;\r\n\r\n        a {\r\n          display: block;\r\n          position: relative;\r\n          width: 96px;\r\n          height: 52px;\r\n          line-height: 52px;\r\n          color: #fff;\r\n          text-align: center;\r\n          font-size: 18px;\r\n          font-family: \"Microsoft YaHei\";\r\n          background: #e1251b;\r\n          overflow: hidden;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}