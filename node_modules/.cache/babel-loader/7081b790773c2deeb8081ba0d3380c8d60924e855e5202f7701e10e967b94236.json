{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from \"vuex\";\nimport throttle from \"lodash/throttle\";\nexport default {\n  methods: {\n    getindex: throttle(function (index) {\n      //修改响应式数据\n      this.currentindex = index;\n      //鼠标进入事件,假如用户的行为过快,会导致项目业务丢失【里面业务有很多，可能出现卡顿现象】。\n      //一句话：用户行为过快,浏览器反应不过来,导致业务丢失!!!!\n      //函数的防抖与节流技术\n      // console.log(\"处理业务\" + index);\n    }, 10),\n    goSearch(event) {\n      //第一个问题:div父节点子元素太多【h3、h2、em、dt、dd、dl...a】？你怎么知道你点击的一定是a\n      //第二个问题:要区分一级分类、二级分类、三级分类的a标签【category1Id|category2Id|category2Id】\n      let targetNode = event.target;\n\n      //获取触发事件节点的自定义属性【a:data-categoryName】\n      let {\n        categoryname,\n        category1id,\n        category2id,\n        category3id\n      } = targetNode.dataset;\n      //判断点击的是a【不管是1|2|3】\n      if (categoryname) {\n        //点击只要是a,就是往search模块跳转\n        var locations = {\n          name: \"search\",\n          query: {\n            categoryName: categoryname\n          }\n        };\n        //一级分类的a\n        if (category1id) {\n          locations.query.category1Id = category1id;\n        } else if (category2id) {\n          //二级分类的a\n          locations.query.category2Id = category2id;\n        } else {\n          //三级分类的a\n          locations.query.category3Id = category3id;\n        }\n\n        //点击商品分类按钮的时候,如果路径当中携带params参数,需要合并携带给search模块\n        /*<!-- if (this.$route.params.keyword) {\r\n          locations.params = this.$route.params;\r\n        } -->*/\n        //目前商品分类这里携带参数只有query参数\n        if (this.$route.params.keyword) {\n          locations.params = this.$route.params;\n        }\n        this.$router.push(locations);\n        this.show = false;\n      }\n    },\n    delindex() {\n      this.currentindex = -1;\n      if (this.$route.path != \"/home\") {\n        this.show = false;\n      }\n    },\n    changeShow() {\n      //鼠标进入:在search路由下,在修改数据\n      if (this.$route.path != \"/home\") {\n        this.show = true;\n      }\n    }\n  },\n  mounted() {\n    if (this.$route.path != \"/home\") {\n      this.show = false;\n    }\n  },\n  data() {\n    return {\n      currentindex: -1,\n      show: true\n    };\n  },\n  computed: {\n    ...mapState({\n      categoryList: state => state.home.category\n    })\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}