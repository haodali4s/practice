{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  //给组件起一个名字,开发者工具中显示这个组件的时候，显示的就是这个名字\n  name: \"Header\",\n  data() {\n    return {\n      keyword: \"\"\n    };\n  },\n  methods: {\n    //搜索按钮的回调\n    goSearch() {\n      let locations = {\n        name: \"search\",\n        params: {\n          keyword: this.keyword || undefined\n        }\n      };\n      //确定路径当中有query参数\n      if (this.$route.query.categoryName) {\n        locations.query = this.$route.query;\n        console.log(locations);\n      }\n      this.$router.push(locations);\n    }\n    // this.$router.push({path:'/search',query:{keyword:'123'}});\n    // this.$router.push('/search/dada');\n  },\n\n  //路由的跳转,采用的是编程式导航.\n  //路由传递参数\n\n  //第一种传递query参数\n  // this.$router.push({path:'/search',query:{keyword:this.keyword}});\n\n  //第二种传递params参数 [一定要注意,面试的时候经常问]\n  // this.$router.push({name:'search',params:{keyword:this.keyword}})\n\n  //第三种传递query+params\n  // this.$router.push({\n  //   name: \"search\",\n  //   params: { keyword: this.keyword },\n  //   query: { keyword: \"ABC\" },\n  // });\n\n  //验证Vue-Router引入Promise技术,最笨的方法,给push传递第二个、第三个参数【回调函数】\n  //下面这种写法：治标不治本！！！！\n  // let result = this.$router.push({name: \"search\",params: { keyword: this.keyword|| undefined}},()=>{},()=>{});\n\n  //问题1:push方法,里面this是谁? vueRouter类的实例\n  // this.$router.push({name:'search',params:{keyword:this.keyword}});\n  //问题2:push方法里面的this是谁?windows\n  // let result = this.$router.push;\n  // result({name:'search',params:{keyword:this.keyword}})\n\n  //点击搜索按钮之前,如果路径当中有query参数,需要携带给search\n\n  // //退出登录的按钮的回调\n  // logout(){\n  //    //派遣action退出登录\n  //    this.$store.dispatch('logout');\n  // }\n\n  mounted() {\n    //清除关键字\n    this.$bus.$on(\"clearKeyword\", () => {\n      console.log(123);\n      this.keyword = \"\";\n    });\n  }\n};","map":{"version":3,"names":["name","data","keyword","methods","goSearch","locations","params","undefined","$route","query","categoryName","console","log","$router","push","mounted","$bus","$on"],"sources":["src/components/Header/index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <header class=\"header\">\r\n      <!-- 头部的第一行 -->\r\n      <div class=\"top\">\r\n        <div class=\"container\">\r\n          <div class=\"loginList\">\r\n            <p>尚品汇欢迎您！</p>\r\n            <p>\r\n              <span>请</span>\r\n              <router-link to登录</a>\r\n              <a href=\"###\" class=\"register\">免费注册</a>\r\n            </p>\r\n          </div>\r\n          <div class=\"typeList\">\r\n            <a href=\"###\">我的订单</a>\r\n            <a href=\"###\">我的购物车</a>\r\n            <a href=\"###\">我的尚品汇</a>\r\n            <a href=\"###\">尚品汇会员</a>\r\n            <a href=\"###\">企业采购</a>\r\n            <a href=\"###\">关注尚品汇</a>\r\n            <a href=\"###\">合作招商</a>\r\n            <a href=\"###\">商家后台</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!--头部第二行 搜索区域-->\r\n      <div class=\"bottom\">\r\n        <h1 class=\"logoArea\">\r\n          <a class=\"logo\" title=\"尚品汇\" href=\"###\" target=\"_blank\">\r\n            <img src=\"./images/logo.png\" alt />\r\n          </a>\r\n        </h1>\r\n        <div class=\"searchArea\">\r\n          <form action=\"###\" class=\"searchForm\">\r\n            <input type=\"text\" id=\"autocomplete\" class=\"input-error input-xxlarge\" v-model=\"keyword\" />\r\n            <button class=\"sui-btn btn-xlarge btn-danger\" type=\"button\" @click=\"goSearch\">搜索</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  //给组件起一个名字,开发者工具中显示这个组件的时候，显示的就是这个名字\r\n  name: \"Header\",\r\n  data() {\r\n    return {\r\n      keyword: \"\"\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    //搜索按钮的回调\r\n    goSearch() {\r\n      let locations = {\r\n        name: \"search\",\r\n        params: { keyword: this.keyword || undefined }\r\n      };\r\n      //确定路径当中有query参数\r\n      if (this.$route.query.categoryName) {\r\n        locations.query = this.$route.query;\r\n        console.log(locations);\r\n      }\r\n      this.$router.push(locations);\r\n     \r\n    }\r\n    // this.$router.push({path:'/search',query:{keyword:'123'}});\r\n    // this.$router.push('/search/dada');\r\n  },\r\n  //路由的跳转,采用的是编程式导航.\r\n  //路由传递参数\r\n\r\n  //第一种传递query参数\r\n  // this.$router.push({path:'/search',query:{keyword:this.keyword}});\r\n\r\n  //第二种传递params参数 [一定要注意,面试的时候经常问]\r\n  // this.$router.push({name:'search',params:{keyword:this.keyword}})\r\n\r\n  //第三种传递query+params\r\n  // this.$router.push({\r\n  //   name: \"search\",\r\n  //   params: { keyword: this.keyword },\r\n  //   query: { keyword: \"ABC\" },\r\n  // });\r\n\r\n  //验证Vue-Router引入Promise技术,最笨的方法,给push传递第二个、第三个参数【回调函数】\r\n  //下面这种写法：治标不治本！！！！\r\n  // let result = this.$router.push({name: \"search\",params: { keyword: this.keyword|| undefined}},()=>{},()=>{});\r\n\r\n  //问题1:push方法,里面this是谁? vueRouter类的实例\r\n  // this.$router.push({name:'search',params:{keyword:this.keyword}});\r\n  //问题2:push方法里面的this是谁?windows\r\n  // let result = this.$router.push;\r\n  // result({name:'search',params:{keyword:this.keyword}})\r\n\r\n  //点击搜索按钮之前,如果路径当中有query参数,需要携带给search\r\n\r\n  // //退出登录的按钮的回调\r\n  // logout(){\r\n  //    //派遣action退出登录\r\n  //    this.$store.dispatch('logout');\r\n  // }\r\n\r\n  mounted() {\r\n    //清除关键字\r\n    this.$bus.$on(\"clearKeyword\", () => {\r\n      console.log(123);\r\n      this.keyword = \"\";\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.header {\r\n  & > .top {\r\n    background-color: #eaeaea;\r\n    height: 30px;\r\n    line-height: 30px;\r\n\r\n    .container {\r\n      width: 1200px;\r\n      margin: 0 auto;\r\n      overflow: hidden;\r\n\r\n      .loginList {\r\n        float: left;\r\n\r\n        p {\r\n          float: left;\r\n          margin-right: 10px;\r\n\r\n          .register {\r\n            border-left: 1px solid #b3aeae;\r\n            padding: 0 5px;\r\n            margin-left: 5px;\r\n          }\r\n        }\r\n      }\r\n\r\n      .typeList {\r\n        float: right;\r\n\r\n        a {\r\n          padding: 0 10px;\r\n\r\n          & + a {\r\n            border-left: 1px solid #b3aeae;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  & > .bottom {\r\n    width: 1200px;\r\n    margin: 0 auto;\r\n    overflow: hidden;\r\n\r\n    .logoArea {\r\n      float: left;\r\n\r\n      .logo {\r\n        img {\r\n          width: 175px;\r\n          margin: 25px 45px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .searchArea {\r\n      float: right;\r\n      margin-top: 35px;\r\n\r\n      .searchForm {\r\n        overflow: hidden;\r\n\r\n        input {\r\n          box-sizing: border-box;\r\n          width: 490px;\r\n          height: 32px;\r\n          padding: 0px 4px;\r\n          border: 2px solid #ea4a36;\r\n          float: left;\r\n\r\n          &:focus {\r\n            outline: none;\r\n          }\r\n        }\r\n\r\n        button {\r\n          height: 32px;\r\n          width: 68px;\r\n          background-color: #ea4a36;\r\n          border: none;\r\n          color: #fff;\r\n          float: left;\r\n          cursor: pointer;\r\n\r\n          &:focus {\r\n            outline: none;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AA6CA;EACA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;IACA;EACA;EAEAC,OAAA;IACA;IACAC,SAAA;MACA,IAAAC,SAAA;QACAL,IAAA;QACAM,MAAA;UAAAJ,OAAA,OAAAA,OAAA,IAAAK;QAAA;MACA;MACA;MACA,SAAAC,MAAA,CAAAC,KAAA,CAAAC,YAAA;QACAL,SAAA,CAAAI,KAAA,QAAAD,MAAA,CAAAC,KAAA;QACAE,OAAA,CAAAC,GAAA,CAAAP,SAAA;MACA;MACA,KAAAQ,OAAA,CAAAC,IAAA,CAAAT,SAAA;IAEA;IACA;IACA;EACA;;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEAU,QAAA;IACA;IACA,KAAAC,IAAA,CAAAC,GAAA;MACAN,OAAA,CAAAC,GAAA;MACA,KAAAV,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}