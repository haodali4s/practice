{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SearchSelector from \"./SearchSelector/SearchSelector\";\nimport { mapGetters, mapState } from \"vuex\";\nimport throttle from \"lodash/throttle\";\nexport default {\n  name: \"Search\",\n  data() {\n    return {\n      //将来Search模块搜索的条件\n      searchParams: {\n        category1Id: \"\",\n        //一级分类的id\n        category2Id: \"\",\n        //二级分类的id\n        category3Id: \"\",\n        //三级分类的id\n        categoryName: \"\",\n        //商品的名字\n        keyword: \"\",\n        //用户搜索的关键字\n        props: [],\n        //商品属性的搜索条件\n        trademark: \"\",\n        //品牌的搜索条件\n        order: \"1:desc\",\n        //排序的参数 【默认初始值:1:desc】\n        pageNo: 1,\n        //当前分页器的页码  【默认初始值:1】\n        pageSize: 20 //代表当前一页显示几条数据 【默认初始值:10】\n      },\n\n      head: [\"综合\", \"价格\", \"新品\", \"销量\"],\n      currentindex: 0,\n      direction: 1\n    };\n  },\n  computed: {\n    ...mapGetters([\"goodsList\"]),\n    ...mapState({\n      total: state => state.search.searchList.total\n    })\n  },\n  components: {\n    SearchSelector\n  },\n  methods: {\n    getindex: throttle(function (index) {\n      //修改响应式数据\n      this.currentindex = index;\n      //鼠标进入事件,假如用户的行为过快,会导致项目业务丢失【里面业务有很多，可能出现卡顿现象】。\n      //一句话：用户行为过快,浏览器反应不过来,导致业务丢失!!!!\n      //函数的防抖与节流技术\n      // console.log(\"处理业务\" + index);\n    }, 10),\n    deindex() {\n      this.currentindex = -1;\n    },\n    getData() {\n      //通知Vuex发请求、仓库存储数据\n      this.$store.dispatch(\"getSearchList\", this.searchParams);\n    },\n    removeCategoryName() {\n      //搜索条件商品名字清空\n      this.searchParams.categoryName = \"\";\n      //骚操作:路由自己跳自己\n      this.$router.push({\n        name: \"search\",\n        params: this.$route.params\n      });\n\n      //为什么这里没有调用发请求函数？\n    },\n\n    //面包屑移出关键字的回调\n    removeKeyword() {\n      //清空关键字\n      this.searchParams.keyword = \"\";\n      //修改URL\n      this.$router.push({\n        name: \"search\",\n        query: this.$route.query\n      });\n      //通知兄弟组件清除关键字\n      this.$bus.$emit(\"clearKeyword\");\n      //为什么这里没有调用发请求函数？\n    },\n\n    getTradeMark(tmId, tmName) {\n      //整理品牌相关的搜索条件\n      this.searchParams.trademark = `${tmId}:${tmName}`;\n      //再次发请求即可\n      this.getData();\n    },\n    removeTradeMark() {\n      //清空品牌的搜索条件\n      this.searchParams.trademark = \"\";\n      //再次发请求获取最新的数据展示\n      this.getData();\n    },\n    getAttrAndAttrValue(attrId, attrName, attrValue) {\n      //整理最新的搜索的条件\n      //整理为字符串\n      let newProps = `${attrId}:${attrValue}:${attrName}`;\n      if (this.searchParams.props.indexOf(newProps) == -1) {\n        this.searchParams.props.push(newProps);\n        //再次发请求，获取最新的数据展示即可\n        this.getData();\n      }\n    },\n    removeAttr(index) {\n      //删除对应的数组里面元素\n      this.searchParams.props.splice(index, 1);\n      //在发一次请求\n      this.getData();\n    },\n    sort(index) {\n      this.direction = -this.direction;\n      let order = this.searchParams.order.split(\":\")[1];\n      if (order == \"desc\") {\n        order = \"asc\";\n      } else {\n        order = \"desc\";\n      }\n      this.searchParams.order = index + 1 + \":\" + order;\n      this.getData();\n    },\n    currentPage(page) {\n      this.searchParams.pageNo = page;\n      this.getData();\n    }\n  },\n  beforeMount() {\n    Object.assign(this.searchParams, this.$route.query, this.$route.params);\n  },\n  mounted() {\n    this.$store.dispatch(\"getSearchList\", this.searchParams);\n  },\n  watch: {\n    //监听组件VC的$route属性\n    //$route:{},应该用深度监听呀?\n    //$route，是vue-router提供的\n    $route() {\n      //再次整理最新的商品名字参数\n      // this.searchParams.category1Id = this.$route.query.category1Id;\n      // this.searchParams.category2Id = this.$route.query.category2Id;\n      // this.searchParams.category3Id = this.$route.query.category3Id;\n      // this.searchParams.categoryName = this.$route.query.categoryName;\n      this.currentindex = 0;\n\n      //先把用户前面存储的1|2|3级别ID清除\n      //发ajax的时候,属性值为undefind,甚至参数K都不携带了【10个搜索条件,可有可无的】\n      this.searchParams.category1Id = undefined;\n      this.searchParams.category2Id = undefined;\n      this.searchParams.category3Id = undefined;\n      //路由变化整理参数：手机最新的商品名字、商品1|2|3ID\n      Object.assign(this.searchParams, this.$route.query, this.$route.params);\n      //再次发请求\n      this.getData();\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}