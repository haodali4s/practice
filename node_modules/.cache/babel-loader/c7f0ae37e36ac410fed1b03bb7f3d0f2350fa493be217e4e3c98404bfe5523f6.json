{"ast":null,"code":"//统一管理项目前部的接口\nimport { requests, requestsme } from \"./requests\";\nimport mockRequests from './mockRequests';\nimport axios from \"axios\";\n// import mockRequests from './mockRequests';\n// //封装函数:复用\n// //将来这个函数可以在别的地方使用,需要对外暴露【分别暴露】\n// //获取商品分类的数据\nexport const reqCategory = () => {\n  //箭头函数可以在程序任意地方使用,箭头函数返回即为服务器的数据\n  //下面箭头函数返回值：返回的是什么? promise,即为返回服务器的数据\n  //return关键字，千万别忘记书写，如果忘记书写，你在任意地方获取的都是undeinfed\n  return requests({\n    method: 'get',\n    url: '/product/getBaseCategoryList'\n  });\n};\nexport const reqBannerList = () => mockRequests({\n  url: '/banner',\n  method: 'get'\n});\n\n//获取Floor数据接口\nexport const reqFloorList = () => mockRequests({\n  url: '/floor',\n  method: 'get'\n});\n\n// //搜索模块的请求接口函数:\n// //将来根据不同的搜索条件,需要给服务器携带不同的参数\n// //请求体携带搜索的参数\n// //搜索的条件:它应该是一个对象10K,可有可无，但是data至少是一个空对象\n// //没有发现:\n// //第一步:整理搜索的参数\n// //第二步：根据最新的搜索参数，获取最新的数据展示!!\nexport const reqSearchList = data => requests({\n  url: '/list',\n  method: 'post',\n  data\n});\n\n// //详情模块商品的数据\nexport const reqDetailList = skuId => requests({\n  url: `/item/${skuId}`,\n  method: 'get'\n});\n\n// //加入购物车|将来修改商品个数的接口\nexport const reqAddOrUpdateCart = (skuId, skuNum) => requests({\n  url: `/cart/addToCart/${skuId}/${skuNum}`,\n  method: 'post'\n});\n\n// //获取用户购物车的数据接口\nexport const reqShopCart = () => requests({\n  url: '/cart/cartList',\n  method: 'get'\n});\n\n// //删除某一个商品的接口\nexport const reqDeleteCart = skuId => requests({\n  url: `/cart/deleteCart/${skuId}`,\n  method: 'delete'\n});\n\n//修改某一个商品的勾选的状态\n\nexport const reqUpdateChecked = (skuId, isChecked) => requests({\n  url: `/cart/checkCart/${skuId}/${isChecked}`,\n  method: 'get'\n});\n\n// //获取验证码接口\nexport const reqGetCode = phone => requests({\n  url: `/user/passport/sendCode/${phone}`,\n  method: 'get'\n});\n\n// //注册的接口\nexport const reqRegister = data => requests({\n  url: `/user/passport/register`,\n  method: 'post',\n  data\n});\n\n// //登录的接口:请求体携带参数 phone&&password\nexport const reqUserLogin = data => requests({\n  url: `/user/passport/login`,\n  method: 'post',\n  data\n});\n\n//获取用户登录成功以后用户信息的接口\nexport const reqUserInfo = () => requests({\n  url: `/user/passport/auth/getUserInfo`,\n  method: 'get'\n});\n\n//退出登录业务\nexport const reqUserLogout = () => requests({\n  url: `/user/passport/logout`,\n  method: 'get'\n});\n\n// //获取用户地址信息\nexport const reqAddressInfo = () => requests({\n  url: `/user/userAddress/auth/findUserAddressList`,\n  method: 'get'\n});\n\n// //获取商品清单数据\nexport const reqShopInfo = () => requests({\n  url: `/order/auth/trade`,\n  method: 'get'\n});\n\n//提交订单接口\nexport const reqSubmitOrder = (tradeNo, data) => requests({\n  url: `/order/auth/submitOrder?tradeNo=${tradeNo}`,\n  method: 'post',\n  data\n});\n\n// //获取支付信息接口\n// export const reqPayInfo = (orderId)=>requests({url:`/payment/weixin/createNative/${orderId}`,method:'get'});\n\n// //查询支付结果\n// export const reqPayResult = (orderId)=>requests({url:`/payment/weixin/queryPayStatus/${orderId}`,method:'get'});\n\n// //获取我的订单\n// export const reqMyOrderList = (page,limit)=>requests({url:`/order/auth/${page}/${limit}`,method:'get'});","map":{"version":3,"names":["requests","requestsme","mockRequests","axios","reqCategory","method","url","reqBannerList","reqFloorList","reqSearchList","data","reqDetailList","skuId","reqAddOrUpdateCart","skuNum","reqShopCart","reqDeleteCart","reqUpdateChecked","isChecked","reqGetCode","phone","reqRegister","reqUserLogin","reqUserInfo","reqUserLogout","reqAddressInfo","reqShopInfo","reqSubmitOrder","tradeNo"],"sources":["E:/360MoveData/Users/Admin/Desktop/qian/cil/shangpinhui/src/api/index.js"],"sourcesContent":["//统一管理项目前部的接口\r\nimport { requests, requestsme } from \"./requests\";\r\nimport mockRequests from './mockRequests';\r\nimport axios from \"axios\";\r\n// import mockRequests from './mockRequests';\r\n// //封装函数:复用\r\n// //将来这个函数可以在别的地方使用,需要对外暴露【分别暴露】\r\n// //获取商品分类的数据\r\nexport const reqCategory = () => {\r\n   //箭头函数可以在程序任意地方使用,箭头函数返回即为服务器的数据\r\n   //下面箭头函数返回值：返回的是什么? promise,即为返回服务器的数据\r\n   //return关键字，千万别忘记书写，如果忘记书写，你在任意地方获取的都是undeinfed\r\n   return requests({ method: 'get', url: '/product/getBaseCategoryList' });\r\n}\r\n\r\nexport const reqBannerList = () => mockRequests({ url: '/banner', method: 'get' });\r\n\r\n//获取Floor数据接口\r\nexport const reqFloorList = () => mockRequests({ url: '/floor', method: 'get' });\r\n\r\n\r\n// //搜索模块的请求接口函数:\r\n// //将来根据不同的搜索条件,需要给服务器携带不同的参数\r\n// //请求体携带搜索的参数\r\n// //搜索的条件:它应该是一个对象10K,可有可无，但是data至少是一个空对象\r\n// //没有发现:\r\n// //第一步:整理搜索的参数\r\n// //第二步：根据最新的搜索参数，获取最新的数据展示!!\r\nexport const reqSearchList = (data) => requests({ url: '/list', method: 'post', data })\r\n\r\n\r\n\r\n// //详情模块商品的数据\r\nexport const reqDetailList = (skuId) =>\r\n   requests({ url: `/item/${skuId}`, method: 'get' });\r\n\r\n\r\n// //加入购物车|将来修改商品个数的接口\r\nexport const reqAddOrUpdateCart = (skuId, skuNum) => requests({ url: `/cart/addToCart/${skuId}/${skuNum}`, method: 'post' });\r\n\r\n\r\n\r\n\r\n// //获取用户购物车的数据接口\r\nexport const reqShopCart = () => requests({ url: '/cart/cartList', method: 'get' });\r\n\r\n\r\n// //删除某一个商品的接口\r\nexport const reqDeleteCart = (skuId) => requests({ url: `/cart/deleteCart/${skuId}`, method: 'delete' });\r\n\r\n\r\n//修改某一个商品的勾选的状态\r\n\r\nexport const reqUpdateChecked = (skuId, isChecked) => requests({ url: `/cart/checkCart/${skuId}/${isChecked}`, method: 'get' });\r\n\r\n\r\n// //获取验证码接口\r\nexport const reqGetCode = (phone) => requests({ url: `/user/passport/sendCode/${phone}`, method: 'get' });\r\n\r\n// //注册的接口\r\nexport const reqRegister = (data) => requests({ url: `/user/passport/register`, method: 'post', data });\r\n\r\n// //登录的接口:请求体携带参数 phone&&password\r\nexport const reqUserLogin = (data) => requests({ url: `/user/passport/login`, method: 'post', data });\r\n\r\n//获取用户登录成功以后用户信息的接口\r\nexport const reqUserInfo = () => requests({ url: `/user/passport/auth/getUserInfo`, method: 'get' });\r\n\r\n\r\n//退出登录业务\r\nexport const reqUserLogout = () => requests({ url: `/user/passport/logout`, method: 'get' });\r\n\r\n\r\n\r\n// //获取用户地址信息\r\nexport const reqAddressInfo = ()=>requests({url:`/user/userAddress/auth/findUserAddressList`,method:'get'});\r\n\r\n\r\n// //获取商品清单数据\r\nexport const reqShopInfo = ()=>requests({url:`/order/auth/trade`,method:'get'});\r\n\r\n\r\n//提交订单接口\r\nexport const reqSubmitOrder = (tradeNo,data)=>requests({url:`/order/auth/submitOrder?tradeNo=${tradeNo}`,method:'post',data});\r\n\r\n// //获取支付信息接口\r\n// export const reqPayInfo = (orderId)=>requests({url:`/payment/weixin/createNative/${orderId}`,method:'get'});\r\n\r\n// //查询支付结果\r\n// export const reqPayResult = (orderId)=>requests({url:`/payment/weixin/queryPayStatus/${orderId}`,method:'get'});\r\n\r\n\r\n// //获取我的订单\r\n// export const reqMyOrderList = (page,limit)=>requests({url:`/order/auth/${page}/${limit}`,method:'get'});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}