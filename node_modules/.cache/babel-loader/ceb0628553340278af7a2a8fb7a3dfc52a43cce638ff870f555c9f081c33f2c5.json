{"ast":null,"code":"import Vue from \"vue\";\nimport Vuerouter from \"vue-router\";\nVue.use(Vuerouter);\nimport store from '../store';\nimport myorder from \"@/pages/center/myOrder/index.vue\";\nimport teamorder from \"@/pages/center/teamOrder/index.vue\";\nlet router = new Vuerouter({\n  routes: [{\n    path: '/',\n    redirect: '/home'\n  }, {\n    path: '/home',\n    component: () => import(\"@/pages/home/index.vue\"),\n    name: 'home',\n    meta: {\n      show: true\n    }\n  }, {\n    path: '/login',\n    component: () => import(\"@/pages/login/index.vue\"),\n    meta: {\n      show: false\n    }\n  }, {\n    path: '/trade',\n    component: () => import(\"@/pages/trade/index.vue\"),\n    beforeEnter(to, from, next) {\n      console.log(from.path);\n      if (from.path == '/shopcart' || from.path == '/login') {\n        next();\n      } else {\n        next(false);\n      }\n    },\n    meta: {\n      show: true\n    }\n  }, {\n    path: '/register',\n    component: () => import(\"@/pages/register/index.vue\"),\n    meta: {\n      show: false\n    }\n  }, {\n    path: '/search/:keyword?',\n    component: () => import(\"@/pages/search/index.vue\"),\n    name: 'search',\n    meta: {\n      show: true\n    }\n  }, {\n    path: '/detail/:spid',\n    component: () => import(\"@/pages/detail/index.vue\"),\n    name: 'detail',\n    meta: {\n      show: true\n    }\n  }, {\n    path: '/addcartsuccess',\n    component: () => import(\"@/pages/addcartsuccess/index.vue\"),\n    name: 'addcartsuccess',\n    meta: {\n      show: true\n    }\n  }, {\n    path: '/shopcart',\n    component: () => import(\"@/pages/shopcart/index.vue\"),\n    name: 'shopcart',\n    meta: {\n      show: true\n    }\n  }, {\n    path: '/pay',\n    component: () => import(\"@/pages/pay/index.vue\"),\n    name: 'pay',\n    beforeEnter(to, from, next) {\n      if (from.path == '/trade') {\n        next();\n      } else {\n        next(false);\n      }\n    },\n    meta: {\n      show: false\n    }\n  }, {\n    path: '/success',\n    component: () => import(\"@/pages/paysuccess/index.vue\"),\n    name: 'success',\n    meta: {\n      show: false\n    },\n    beforeEnter(to, from, next) {\n      if (from.path == '/pay') {\n        next();\n      } else {\n        next(false);\n      }\n    }\n  }, {\n    path: '/center',\n    component: () => import(\"@/pages/center/index.vue\"),\n    name: 'center',\n    meta: {\n      show: true\n    },\n    children: [{\n      path: \"myorder\",\n      component: myorder\n    }, {\n      path: \"teamorder\",\n      component: teamorder\n    }, {\n      path: \"/center\",\n      redirect: \"/center/myorder\"\n    }]\n  }],\n  scrollBehavior() {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n});\nrouter.beforeEach(async (to, from, next) => {\n  //to:去的那个路由的信息\n  //from:从那个路由而来的信息\n  //next:放行函数!!!!!! \n  //第一种：next(),放行函数，放行到它想去的路由！！！\n  //第二种:next(path),守卫指定放行到那个路由去?\n\n  //用户是否登录:取决于仓库里面是否有token！！！\n  //每一次路由跳转之前需要用有用户信息在跳转,没有发请求获取用户信息在跳转！！！！\n  //token\n  let hasToken = store.state.user.token;\n  //用户信息\n  let hasNickName = store.state.user.userdata.nickName;\n  //用户登录\n  if (hasToken) {\n    //用户登录了,不能去login\n    if (to.path == \"/login\") {\n      next(from.fullPath);\n    } else {\n      //用户登陆了,而且还有用户信息【去的并非是login】\n      if (hasNickName) {\n        next();\n      } else {\n        try {\n          //发请求获取用户信息以后在放行\n          await store.dispatch('getUserInfo');\n          next();\n        } catch (error) {\n          //用户没有信息，还携带token发请求获取用户信息【失败】\n          //token【学生证失效了】\n          //token失效:本地清空数据、服务器的token通知服务器清除\n          await store.dispatch('logout');\n\n          //回到登录页，重新获取一个新的学生证\n          next('/login');\n        }\n        // await store.dispatch('logout');\n      }\n    }\n  } else {\n    if (to.path.indexOf('trade') != -1 || to.path.indexOf('pay') != -1 || to.path.indexOf('center') != -1) {\n      next('/login?redirect=' + to.path);\n    } else {\n      next();\n    }\n    //用户未登录||目前的判断都是放行.将来这里会'回手掏'增加一些判断\n    //用户未登录:不能进入/trade、/pay、/paysuccess、/center、/center/myorder  /center/teamorder\n    // let toPath = to.path;\n    // if (toPath.indexOf('trade') != -1 || toPath.indexOf('pay') != -1 || toPath.indexOf('center') != -1) {\n    //     next('/login?redirect=' + toPath);\n    // } else {\n    //     next();\n    // }\n  }\n});\n\nexport default router;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}